{"version":3,"sources":["hooks/useForm.js","firebase/firabase-config.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","finishLoading","type","loadNotes","uid","a","collection","get","noteSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","handelInputChange","showError","err","isFormValid","validator","isEmail","trim","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4914172b.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAi5XmdYxMQkRvNTFJO-h1tfWAAfjq5oes\",\r\n    authDomain: \"react-app-cursos-d0bc1.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-d0bc1.firebaseio.com\",\r\n    projectId: \"react-app-cursos-d0bc1\",\r\n    storageBucket: \"react-app-cursos-d0bc1.appspot.com\",\r\n    messagingSenderId: \"97306439018\",\r\n    appId: \"1:97306439018:web:bd40042e037ed840550913\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    \r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n    \r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active notes',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading  = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading   = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n","import { db } from \"../firebase/firabase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const noteSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = []\r\n\r\n    noteSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    \r\n    return notes;\r\n}\r\n\r\n","export const fileUpload = async ( file ) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/orlinalvarado/upload';\r\n    \r\n    const formData = new FormData();\r\n    \r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n    \r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        \r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n       throw error;\r\n    }\r\n    \r\n    \r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { db } from \"../firebase/firabase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n        \r\n        dispatch( activeNote(doc.id, newNote));\r\n        dispatch( addNewNote(doc.id, newNote ));\r\n    }\r\n}\r\n\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes(uid);\r\n                \r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n        \r\n        if( !note.url ){\r\n            delete note.url;\r\n        }\r\n        \r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        \r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n        \r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        \r\n        Swal.fire('Save', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) =>({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState) => {\r\n        \r\n        const { active: activeNote } = getState().notes;\r\n        \r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        \r\n        const fileUrl = await fileUpload( file );\r\n        \r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote(activeNote) );\r\n        \r\n        Swal.close();\r\n        \r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const uid = getState().auth.uid;\r\n        \r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        \r\n        dispatch( deleteNote(id) );\r\n        \r\n        Swal.fire('Delete', 'Note deleted', 'success');\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firabase-config';\r\nimport { types } from \"../types/types\"\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return ( dispatch ) => {\r\n        \r\n        dispatch(startLoading());        \r\n        \r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then( ({ user }) => {\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            )\r\n            \r\n            dispatch( finishLoading() );\r\n        }).catch( e => {\r\n            dispatch( finishLoading() );\r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then( async ({ user }) => {\r\n           await user.updateProfile({\r\n                displayName: name\r\n            })\r\n            dispatch(\r\n                 login( user.uid, user.displayName )\r\n            )\r\n        }).catch( e => {\r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user }) => {\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return  async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        \r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\nimport validator from 'validator'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const { loading } = useSelector( state => state.ui);\r\n    \r\n    const [ formValues, handelInputChange] = useForm({\r\n        email: '',\r\n        password: ''        \r\n    })\r\n    \r\n    const {email, password} = formValues;\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch( startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n    \r\n    const showError = (err) => {\r\n        Swal.fire('Error', err, 'error');\r\n    }  \r\n    \r\n    const isFormValid = () => {\r\n       if ( !validator.isEmail(email) ){\r\n            showError('Email is not valid');\r\n            return false;\r\n        } else if ( password.trim().length === 0){\r\n            showError('Password is not valid');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            \r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleLogin }\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\" \r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\" \r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                    \r\n                <button\r\n                    disabled={ loading }\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary .btn-block\"\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n// import { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n   const dispatch = useDispatch()\r\n   \r\n   //const { msgError } = useSelector( state => state.ui);\r\n   \r\n   \r\n    const showError = (err) => {\r\n        Swal.fire('Error', err, 'error');\r\n    }   \r\n   const [ formValues, handelInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( isFormValid()){\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name));\r\n        } \r\n\r\n    }\r\n    \r\n    \r\n    const isFormValid = () => {\r\n        \r\n        if(name.trim().length === 0){\r\n            // dispatch(setError('Name is required'))\r\n            showError('Name is required');\r\n            return false;\r\n        } else if ( !validator.isEmail(email) ){\r\n            showError('Email is not valid');\r\n            // dispatch(setError('Email is not valid'))\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5){\r\n            showError('Email is not valid');\r\n            // dispatch(setError('Password should be at least 6 charcaters and match each other'));\r\n            return false;\r\n        }\r\n        \r\n        //dispatch( removeError())\r\n        return true;\r\n    }\r\n    const {name, email, password, password2} = formValues;\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            \r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleRegister }\r\n            >\r\n                \r\n                {/* {\r\n                    msgError &&\r\n                    (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    )\r\n                } */}\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\" \r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\" \r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\" \r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\" \r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handelInputChange }\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n                \r\n                \r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        \r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container\">\r\n                    <Switch>\r\n                        <Route path=\"/auth/login\" component={ LoginScreen } />\r\n                        <Route path=\"/auth/register\" component={ RegisterScreen} />\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n           \r\n        </div>    \r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url}) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const noteDate = moment(date);    \r\n    \r\n    const handleEntryClick = () => {\r\n        dispatch(\r\n            activeNote(id, {\r\n                date, \r\n                title,\r\n                body,\r\n                url\r\n            })\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {   \r\n                url &&\r\n                <div \r\n                    className=\"journal_entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry_title\">{ title }</p>\r\n                <p className=\"journal__entry_content\"> { body } </p>\r\n            </div>\r\n            \r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    \r\n    const { notes } = useSelector(state => state.notes )\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const { name } = useSelector( state => state.auth);\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal_sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            \r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n            \r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    const dispatch = useDispatch();\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n    \r\n    const handlePictureClick = () => {\r\n        document.querySelector(\"#fileSelector\").click();\r\n    }\r\n    \r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        \r\n        if(file){\r\n            dispatch( startUploading( file ))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28  de agosto 2020</span>\r\n            \r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n                \r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes)\r\n    \r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    \r\n    const { body, title, id } = formValues;\r\n    \r\n    const activeId = useRef( note.id);\r\n    \r\n    useEffect(() => {\r\n        if( note.id !== activeId.current){\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n        \r\n    }, [note, reset])\r\n    \r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }));\r\n    }, [formValues, dispatch])\r\n    \r\n    const handleDelete = () => {\r\n        dispatch(startDeleting( id ));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            \r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    name=\"body\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                >\r\n                </textarea>\r\n                \r\n                { \r\n                    (note.url)\r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img alt=\"Prueba\" src={ note.url }/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <button\r\n               className=\"btn btn-danger\"\r\n               onClick={ handleDelete } \r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Select something\r\n            <br/>\r\n            \r\n            Or create an entry\r\n            </p>\r\n            \r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n// import { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n    \r\n    const { active } = useSelector(state => state.notes)\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n            \r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? <NoteScreen />\r\n                    : <NothingSelected />\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firabase-config'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const [checking, setChecking] = useState(true);\r\n    \r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    \r\n    \r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if( user?.uid ){\r\n                dispatch( login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                \r\n                dispatch( startLoadingNotes( user.uid ) );\r\n                \r\n            } else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            \r\n            setChecking(false);\r\n        })\r\n       \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if(checking){\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n            <Switch>\r\n                <PublicRoute\r\n                    path=\"/auth\"\r\n                    component={ AuthRouter }\r\n                    isAuthenticated={ isLoggedIn} \r\n                />\r\n                \r\n                <PrivateRoute \r\n                    exact\r\n                    isAuthenticated={ isLoggedIn } \r\n                    path=\"/\"\r\n                    component={ JournalScreen }\r\n                />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n           \r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = ( state = initialState, action )=> {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true                \r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n","/*\r\n    {\r\n        notes: [],\r\n        active: null, \r\n        active: {\r\n            id: 'asdfasdfasdfas3e',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12131313\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                            ? action.payload.note\r\n                            : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}